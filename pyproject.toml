[tool.poetry]
name = "fastapi-quickstart"
version = "0.0.1"
description = ""
authors = ["Kostiantyn Salnykov <kostiantyn.salnykov@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "fastapi_quickstart"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {extras = ["standard"], version = "^0.85.0"}
asyncpg = "^0.26.0"
SQLAlchemy = {extras = ["asyncio"], version = "^1.4.41"}
pydantic = {extras = ["dotenv", "email"], version = "^1.10.2"}
alembic = "^1.8.1"
orjson = "^3.8.0"
uvicorn = {extras = ["standard"], version = "^0.18.3"}
gunicorn = "^20.1.0"
psycopg2-binary = "^2.9.3"
phonenumbers = "^8.12.56"
httpx = "^0.23.0"


[tool.poetry.group.lint.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
xenon = "^0.9.0"
mypy = "^0.981"


[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
pytest-mock = "^3.8.2"
pytest-sugar = "^0.9.5"
pytest-cov = "^3.0.0"
pytest-randomly = "^3.12.0"
pytest-clarity = "^1.0.1"
Faker = "^15.0.0"
pydantic-factories = "^1.7.0"
pytest-alembic = "^0.8.4"


[tool.poetry.group.dev.dependencies]
ipython = "^8.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# === Black ===
[tool.black]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
/(
  | dist
  | .pytest_cache
  | .tox
  | docs
  | docs_src
  | .venv
  | .mypy_cache
)/
'''

# === Isort ===
[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_glob = []


# === Pytest ===
[tool.pytest.ini_options]
markers = [
    'debug: marks tests as debug (deselect with -m "not debug")',
]
#addopts = "--maxfail=1 -rf"
norecursedirs = ["venv", ".venv", ".env", "migrations",]
testpaths = ["tests",]
python_files = ["test*.py", "*test.py"]
python_functions = ["*_test", "test_*"]
console_output_style = "progress"
asyncio_mode = "auto"
log_cli = true
pytest_alembic_tests_folder = "tests/migrations"

# === Coverage ===
[tool.coverage.run]
parallel = true
branch = true
source = ["apps",]
omit = ["*/.local/*", "*/.idea/*", "*./venv/*", "*/test*", "*__init__*", "*/migrations*" , "**interfaces.py"]

[tool.coverage.report]
#show_missing = true
ignore_errors = true
sort = "-Cover"
precision = 2
omit = ["*/.local/*", "*/.idea/*", "*./venv/*", "*/test*", "*__init__*", "*/migrations*", "**interfaces.py"]
exclude_lines = ["pragma: no cover", "if __name__ = .__main__.:"]

[tool.coverage.html]
directory = "coverage"

[tool.mypy]
python_version = "3.10"
files = ['*.py', '**/*.py']
exclude = ["docs*", "coverage", "tests"]
plugins = ["pydantic.mypy",]
no_site_packages = true
follow_imports = "skip"
ignore_missing_imports = true
strict_optional = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
#disallow_any_unimported = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
